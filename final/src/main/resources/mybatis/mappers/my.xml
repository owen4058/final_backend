<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
      PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapper.my">
	<resultMap id="profile" type="profile">
        <result property="user_id" column="user_id" />
        <result property="nickname" column="nickname" />
        <result property="pro_path" column="pro_path" />
        <result property="following_count" column="following_count" />
        <result property="follower_count" column="follower_count" />
        <result property="board_count" column="board_count" />
        <result property="comment_count" column="comment_count" />
        <result property="likes_count" column="likes_count" />
    </resultMap>
    
   	<resultMap id="boardform" type="boardform">
        <result property="board_id" column="board_id" />
        <result property="section_id" column="section_id" />
        <result property="forum_id" column="forum_id" />
        <result property="board_like_state" column="board_like_state" />
        <result property="board_save_state" column="board_save_state" />
        <result property="nickname" column="nickname" />
        <result property="user_id" column="user_id" />
        <result property="pro_path" column="pro_path" />
        <result property="title" column="title" />
        <result property="content" column="content" />
        <result property="hits" column="hits" />
        <result property="like_count" column="like_count" />
        <result property="comment_count" column="comment_count" />
        <result property="create_date" column="create_date" />
         <collection  property="img" ofType="boardimg" javaType="List">
			<result property="img_id" column="img_id"/>
			<result property="board_id" column="board_id"/>
			<result property="img_name" column="img_name"/>
			<result property="img_path" column="img_path"/>
		</collection>
		<collection  property="tag" ofType="hashtag" javaType="List">
			<result property="hastag_id" column="hastag_id"/>
			<result property="board_id" column="board_id"/>
			<result property="hashtag_name" column="hashtag_name"/>
		</collection>
	</resultMap>
	
	<select id="myBoardList" resultMap = "boardform" parameterType= "int">
       	<![CDATA[
		SELECT
		    b.board_id,
		    b.section_id,
		    b.forum_id,
		    b.user_id,
		    u.pro_path,
		    u.nickname,
		    b.title,
		    b.content,
		    b.hits,
		    b.like_count,
		    b.comment_count,
		    b.create_date,
		    i.img_id,
		    i.img_name,
		    i.img_path,
		    ht.hastag_id,
		    ht.hashtag_name,
		    CASE 
               WHEN g.LIKE_UD  IS NOT NULL THEN g.LIKE_UD
               ELSE 0
            END AS board_like_state,
            CASE 
               WHEN h.user_id  IS NOT NULL THEN 1
               ELSE 0
            END AS board_save_state 
		FROM
		    board b
		    LEFT JOIN users u ON b.user_id = u.user_id
		    LEFT JOIN img i ON b.board_id = i.board_id
		    LEFT JOIN hashtag ht ON b.board_id = ht.board_id
  			LEFT OUTER JOIN	board_like g ON b.board_id = g.board_id and g.user_id = #{user_id}
  			LEFT OUTER JOIN	BOARD_SAVE h ON b.board_id = h.board_id and h.user_id = #{user_id} 
		WHERE
		    b.user_id = #{user_id}
		ORDER BY
		    b.create_date DESC
        ]]>
	</select>

  <select id="myCommentBoardList" resultMap="boardform" parameterType="int">
	  <![CDATA[
	    SELECT
		    b.board_id,
		    b.section_id,
		    b.forum_id,
		    b.user_id,
		    u.pro_path,
		    u.nickname,
		    b.title,
		    b.content,
		    b.hits,
		    b.like_count,
		    b.comment_count,
		    b.create_date,
		    img.img_id,
		    img.img_name,
		    img.img_path,
		    tag.hastag_id,
		    tag.hashtag_name,
		    c.user_id,
		    CASE 
               WHEN g.LIKE_UD  IS NOT NULL THEN g.LIKE_UD
               ELSE 0
            END AS board_like_state,
            CASE 
               WHEN h.user_id  IS NOT NULL THEN 1
               ELSE 0
            END AS board_save_state 
		FROM
		    board b
	    INNER JOIN comments c ON b.board_id = c.board_id 
		LEFT JOIN users u ON b.user_id = u.user_id
		LEFT JOIN (
		    SELECT
		        img_id,
		        board_id,
		        img_name,
		        img_path
		    FROM
		        img
		) img ON b.board_id = img.board_id
		LEFT JOIN (
		    SELECT
		        hastag_id,
		        board_id,
		        hashtag_name
		    FROM
		        hashtag
		) tag ON b.board_id = tag.board_id
		LEFT OUTER JOIN	board_like g ON b.board_id = g.board_id and g.user_id = #{user_id}
		LEFT OUTER JOIN	BOARD_SAVE h ON b.board_id = h.board_id and h.user_id = #{user_id}
		
		WHERE
		    c.user_id = #{user_id}
		ORDER BY
		    b.board_id DESC
	  ]]>

	</select>
	<select id="myLikedBoardList" resultMap="boardform" parameterType="int">
		<![CDATA[ 
			SELECT
			    b.board_id,
			    b.section_id,
			    b.forum_id,
			    b.user_id,
			    u.pro_path,
			    u.nickname,
			    b.title,
			    b.content,
			    b.hits,
			    b.like_count,
			    b.comment_count,
			    b.create_date,
			    i.img_id,
			    i.img_name,
			    i.img_path,
			    ht.hastag_id,
			    ht.hashtag_name,
			    CASE 
	               WHEN g.LIKE_UD  IS NOT NULL THEN g.LIKE_UD
	               ELSE 0
	            END AS board_like_state,
	            CASE 
	               WHEN h.user_id  IS NOT NULL THEN 1
	               ELSE 0
	            END AS board_save_state 
			FROM
			    board b
			    LEFT JOIN users u ON b.user_id = u.user_id
			    LEFT JOIN img i ON b.board_id = i.board_id
			    LEFT JOIN hashtag ht ON b.board_id = ht.board_id
			    LEFT OUTER JOIN	board_like g ON b.board_id = g.board_id and g.user_id = #{user_id}
				LEFT OUTER JOIN	BOARD_SAVE h ON b.board_id = h.board_id and h.user_id = #{user_id} 
			WHERE
			    EXISTS (
			        SELECT 1
			        FROM board_like bl
			        WHERE bl.user_id = #{user_id}
			        AND bl.board_id = b.board_id
			    )
			ORDER BY
			    b.board_id DESC
		]]>
	</select>
	<select id="mySavedBoardList" resultMap="boardform" parameterType="int">
	<![CDATA[ 
		SELECT
			    b.board_id,
			    b.section_id,
			    b.forum_id,
			    b.user_id,
			    u.pro_path,
			    u.nickname,
			    b.title,
			    b.content,
			    b.hits,
			    b.like_count,
			    b.comment_count,
			    b.create_date,
			    i.img_id,
			    i.img_name,
			    i.img_path,
			    ht.hastag_id,
			    ht.hashtag_name,
			    CASE 
	               WHEN g.LIKE_UD  IS NOT NULL THEN g.LIKE_UD
	               ELSE 0
	            END AS board_like_state,
	            CASE 
	               WHEN h.user_id  IS NOT NULL THEN 1
	               ELSE 0
	            END AS board_save_state 
			FROM
			    board b
			    LEFT JOIN users u ON b.user_id = u.user_id
			    LEFT JOIN img i ON b.board_id = i.board_id
			    LEFT JOIN hashtag ht ON b.board_id = ht.board_id
			    LEFT OUTER JOIN	board_like g ON b.board_id = g.board_id and g.user_id = #{user_id}
				LEFT OUTER JOIN	BOARD_SAVE h ON b.board_id = h.board_id and h.user_id = #{user_id}
			WHERE
			    EXISTS (
			        SELECT 1
			        FROM board_save bs
			        WHERE bs.user_id = #{user_id}
			        AND bs.board_id = b.board_id
			    )
			ORDER BY
			    b.board_id DESC
	]]>
	</select>

</mapper>
